<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Xml" #>

<#@ output extension="Helper.cs" #>
<#Init();#>
// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

namespace Web_App.AppCode.Helper.Language
{
    public static partial class LanguageHelper
    {<#foreach (string key in keyList) {#>

        public static string <#=key.Replace(" ","_")#>
        {
            get { return GetString("<#=key#>"); }
        }
   <#}#>
 }
}
<#+
      List<string> keyList = new List<string>();
      public void Init()
      {
		 string solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)");
         string absolutePath = Path.GetFullPath(solutionsPath + @"\Web_App\Configs\Resource");
         var files = Directory.GetFiles(absolutePath,"*.resx");

         foreach(var file in files)
         {
           var doc = new XmlDocument();
           doc.Load(file);
           foreach (XmlNode node in doc.SelectNodes("/root/data"))
           {
              var name = node.Attributes["name"].InnerText;
              if (!keyList.Contains(name))
                  keyList.Add(name);
           }
         }  
        keyList.Sort();
      }#>